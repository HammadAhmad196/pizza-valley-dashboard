[{"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\index.js":"1","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reportWebVitals.js":"2","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\App.js":"3","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\store\\store.js":"4","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\pizzaReducers.js":"5","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\userReducer.js":"6","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\LoginScreen.js":"7","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Navbar.js":"8","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\AdminScreen.js":"9","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Error.js":"10","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Loading.js":"11","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\PizzasList.js":"12","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\UsersList.js":"13","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\userActions.js":"14","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\pizzaActions.js":"15","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\AddPizzas.js":"16","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\OrdersList.js":"17","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\RegisterScreen.js":"18","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Success.js":"19","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\EditPizza.js":"20","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\orderActions.js":"21","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\orderReducer.js":"22"},{"size":574,"mtime":1625211899164,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1622615276867,"results":"25","hashOfConfig":"24"},{"size":733,"mtime":1625320851596,"results":"26","hashOfConfig":"24"},{"size":1393,"mtime":1625467345929,"results":"27","hashOfConfig":"24"},{"size":1952,"mtime":1625466980932,"results":"28","hashOfConfig":"24"},{"size":1445,"mtime":1625467883131,"results":"29","hashOfConfig":"24"},{"size":1965,"mtime":1625210048896,"results":"30","hashOfConfig":"24"},{"size":1787,"mtime":1625320914235,"results":"31","hashOfConfig":"24"},{"size":1996,"mtime":1625556197392,"results":"32","hashOfConfig":"24"},{"size":237,"mtime":1625209961020,"results":"33","hashOfConfig":"24"},{"size":371,"mtime":1625209985755,"results":"34","hashOfConfig":"24"},{"size":2229,"mtime":1625557005496,"results":"35","hashOfConfig":"24"},{"size":1682,"mtime":1625556987864,"results":"36","hashOfConfig":"24"},{"size":1808,"mtime":1625469115831,"results":"37","hashOfConfig":"24"},{"size":2714,"mtime":1625469064705,"results":"38","hashOfConfig":"24"},{"size":4286,"mtime":1625556532979,"results":"39","hashOfConfig":"24"},{"size":2423,"mtime":1625556971820,"results":"40","hashOfConfig":"24"},{"size":3389,"mtime":1625210070170,"results":"41","hashOfConfig":"24"},{"size":243,"mtime":1625319491873,"results":"42","hashOfConfig":"24"},{"size":5267,"mtime":1625556845224,"results":"43","hashOfConfig":"24"},{"size":1304,"mtime":1625465579928,"results":"44","hashOfConfig":"24"},{"size":543,"mtime":1625400127132,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1u7zri5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\index.js",[],["104","105"],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reportWebVitals.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\App.js",["106","107"],"import './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom'\r\nimport Navbar from './components/Navbar';\r\nimport Registerscreen from './screens/RegisterScreen';\r\nimport Loginscreen from './screens/LoginScreen';\r\nimport AdminScreen from './screens/AdminScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n\r\n      <BrowserRouter>\r\n\r\n      <Route path=\"/\" component={AdminScreen} />\r\n       <Route path=\"/register\" exact component={Registerscreen} />\r\n       <Route path=\"/login\" exact component={Loginscreen} />\r\n  \r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\store\\store.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\pizzaReducers.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\userReducer.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\LoginScreen.js",["108"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../actions/userActions'\r\nimport Error from '../components/Error';\r\nimport Loading from '../components/Loading';\r\n\r\nexport default function Loginscreen() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const loginstate = useSelector(state => state.loginUserReducer)\r\n  const { error, loading } = loginstate\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n\r\n    if (localStorage.getItem('currentUser')) {\r\n      window.location.href = '/'\r\n    }\r\n\r\n  }, [])\r\n\r\n  function login() {\r\n    const user = { email, password }\r\n    dispatch(loginUser(user))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div className=\"col-md-5 mt-5 text-start shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <h2 style={{ fontSize: \"35px\" }} className=\"m-2\" className=\"\">\r\n            Login\r\n          </h2>\r\n\r\n          {loading && (<Loading />)}\r\n          {error && (<Error error='Invalid Credentials' />)}\r\n\r\n          <div>\r\n            <input\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n              onChange={(e) => { setEmail(e.target.value) }}\r\n            />\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => { setPassword(e.target.value) }}\r\n            />\r\n            <button className=\"btn mt-3 mb-3\" onClick={login}>Login</button>\r\n            <br />\r\n            <a style={{ color: 'black' }} className=\"\" href=\"/register\">Click Here To Register</a>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Navbar.js",["109","110"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutUser } from '../actions/userActions';\r\n\r\nexport default function Navbar() {\r\n  const userstate = useSelector((state) => state.loginUserReducer)\r\n  const {currentUser} = userstate;\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"w-100\">\r\n      <nav className=\"navbar navbar-expand-lg shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <a className=\"navbar-brand\" href=\"/\">Pizza Valley</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ms-auto\">\r\n            {currentUser ? (\r\n              <div className=\"dropdown mt-2\">\r\n                <a style={{color: 'black'}} className=\"dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  {currentUser.name}\r\n                </a>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  {/* <a className=\"dropdown-item\" href=\"/orders\">Orders</a> */}\r\n                  <a className=\"dropdown-item\" href='#' onClick={()=>{dispatch(logoutUser())}}><li className=\"\">Logout</li></a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/login\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\AdminScreen.js",["111","112","113"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Route, Switch , Link } from 'react-router-dom';\r\nimport AddPizza from './AddPizzas';\r\nimport EditPizza from './EditPizza';\r\nimport OrdersList from './OrdersList';\r\nimport PizzasList from './PizzasList';\r\nimport UsersList from './UsersList';\r\n\r\nexport default function AdminScreen() {\r\n    const userstate = useSelector((state) => state.loginUserReducer)\r\n    const { currentUser } = userstate;\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n\r\n    //     if (!currentUser.isAdmin) {\r\n    //         window.location.href = '/'\r\n    //     }\r\n    // }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className='row justify-content-center p-3'>\r\n                <div className=\"col-md-10\">\r\n                    <h2 style={{ fontSize: \"28px\" }}>Admin Screen</h2>\r\n                    <ul className=\"adminfunctions\">\r\n                        <li>\r\n                            <Link to={'/admin/userslist'}>Users List</Link>\r\n                            <Link to={'/admin/pizzaslist'}>Pizzas List</Link>\r\n                            <Link to={'/admin/addpizza'}>Add New Pizza</Link>\r\n                            <Link to={'/admin/orderslist'}>Orders List</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <Switch>\r\n                        <Route path='/' component={UsersList} exact />\r\n                        <Route path='/admin/userslist' component={UsersList} exact />\r\n                        <Route path='/admin/pizzaslist' component={PizzasList} exact />\r\n                        <Route path='/admin/addpizza' component={AddPizza} exact />\r\n                        <Route path='/admin/orderslist' component={OrdersList} exact />\r\n                        <Route path='/admin/editpizza/:pizzaid' component={EditPizza} exact />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Error.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Loading.js",["114"],"import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\" style={{height: '100px' , marginTop: '100px' , width: '100px' , marginTop: '100px'}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\PizzasList.js",["115","116"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../components/Loading';\r\nimport Error from '../components/Error';\r\n// import Filter from '../components/Filter';\r\nimport { deletePizza, getAllPizzas } from '../actions/pizzaActions';\r\n\r\nexport default function PizzasList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const pizzasstate = useSelector(state => state.getAllPizzasReducer);\r\n    const { pizzas, error, loading } = pizzasstate;\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPizzas())\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ fontSize: \"28px\" }}>Pizzas List</h2>\r\n            {loading && (<Loading />)}\r\n            {error && (<Error error='Something wen wrong' />)}\r\n\r\n            <table className=\"table table-bordered table-responsive-sm\">\r\n\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Prices</th>\r\n                        <th>Category</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pizzas && pizzas.map(pizza => {\r\n\r\n                        return <tr>\r\n                            <td>{pizza.name}</td>\r\n                            <td>\r\n\r\n                                Small :{pizza.prices[0]['small']}<br />\r\n                                Medium :{pizza.prices[0]['medium']}<br />\r\n                                Large :{pizza.prices[0]['large']}<br />\r\n\r\n                            </td>\r\n                            <td>{pizza.category}</td>\r\n                            <td>\r\n                                <i className=\"fa fa-trash m-1\" onClick={()=>{dispatch(deletePizza(pizza._id))}}></i>\r\n                                <Link to={`/admin/editpizza/${pizza._id}`}>\r\n                                    <i className=\"fa fa-edit m-1\"></i>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\UsersList.js",["117","118"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Error from '../components/Error';\r\nimport { deleteUser, getAllUsers } from '../actions/userActions';\r\n\r\nexport default function UsersList() {\r\n    const dispatch = useDispatch()\r\n    const usersstate = useSelector(state => state.getAllUsersReducer)\r\n    const { loading, error, users } = usersstate\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUsers())\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ fontSize: '22px' }}>Users List</h2>\r\n            {loading && (<Loading />)}\r\n            {error && (<Error error='Something went wrong' />)}\r\n            <table className='table table-striped table-bordered table-responsive-sm'>\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th>User Id</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users && users.map(user => {\r\n                        return <tr>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>\r\n                                <i className=\"fa fa-trash\" onClick={()=>{dispatch(deleteUser(user._id))}}></i>\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\userActions.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\pizzaActions.js",["119","120"],"import axios from 'axios';\r\nexport const getAllPizzas = () => async dispatch => {\r\n\r\n    dispatch({ type: 'GET_PIZZAS_REQUEST' })\r\n\r\n    try {\r\n\r\n        const response = await axios.get('/api/pizzas/getallpizzas')\r\n        console.log(response)\r\n        dispatch({ type: 'GET_PIZZAS_SUCCESS', payload: response.data })\r\n    } catch (error) {\r\n\r\n        dispatch({ type: 'GET_PIZZAS_FAILED', payload: error })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getPizzaById = (pizzaid) => async dispatch => {\r\n\r\n    dispatch({ type: 'GET_PIZZABYID_REQUEST' })\r\n\r\n    try {\r\n\r\n        const response = await axios.post('/api/pizzas/getpizzabyid', { pizzaid })\r\n        console.log(response)\r\n        dispatch({ type: 'GET_PIZZABYID_SUCCESS', payload: response.data })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({ type: 'GET_PIZZABYID_FAILED', payload: error })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const filterPizzas = (searchkey, category) => async dispatch => {\r\n\r\n    var filteredPizzas;\r\n    dispatch({ type: 'GET_PIZZAS_REQUEST' })\r\n\r\n    try {\r\n\r\n        const response = await axios.get('/api/pizzas/getallpizzas')\r\n        filteredPizzas = response.data.filter(pizza => pizza.name.toLowerCase().includes(searchkey))\r\n\r\n        if (category != 'all') {\r\n            filteredPizzas = response.data.filter(pizza => pizza.category.toLowerCase() == category)\r\n        }\r\n\r\n        dispatch({ type: 'GET_PIZZAS_SUCCESS', payload: filteredPizzas })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({ type: 'GET_PIZZAS_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addPizza = (pizza) => async dispatch => {\r\n    dispatch({ type: 'Add_PIZZA_REQUEST' })\r\n    try {\r\n        const response = await axios.post('/api/pizzas/addpizza', { pizza })\r\n        console.log(response)\r\n        dispatch({ type: 'Add_PIZZA_SUCCESS' })\r\n    } catch (error) {\r\n        dispatch({ type: 'Add_PIZZA_FAILED', payload: error })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const editPizza = (editedpizza) => async dispatch => {\r\n    dispatch({ type: 'EDIT_PIZZA_REQUEST' })\r\n    try {\r\n        const response = await axios.post('/api/pizzas/editpizza', { editedpizza })\r\n        console.log(response)\r\n        dispatch({ type: 'EDIT_PIZZA_SUCCESS' })\r\n        window.location.href = '/admin/pizzaslist'\r\n    } catch (error) {\r\n        dispatch({ type: 'EDIT_PIZZA_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deletePizza=(pizzaid)=>async dispatch=>{\r\n    \r\n    try {\r\n        const response= await axios.post('/api/pizzas/deletepizza', {pizzaid})\r\n        alert('Pizza Deleted Successfully')\r\n        console.log(response)\r\n        window.location.reload()\r\n    } catch (error) {\r\n        alert(\"Something wen wrong\")\r\n        console.log(error)\r\n    }\r\n\r\n}","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\AddPizzas.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\OrdersList.js",["121","122"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Error from '../components/Error';\r\n// import Filter from '../components/Filter';\r\nimport { deleteOrder, deliverOrder, getAllOrders } from '../actions/orderActions';\r\n\r\nexport default function OrdersList() {\r\n    const dispatch = useDispatch()\r\n    const getordersstate = useSelector(state => state.getAllOrdersReducer)\r\n    const { loading, error, orders } = getordersstate\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllOrders())\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{fontSize: '22px'}}>Order List</h2>\r\n            {loading && (<Loading />)}\r\n            {error && (<Error error='Something went wrong' />)}\r\n            <table className=\"table table-striped table-bordered table-responsive-sm\">\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th>Order Id</th>\r\n                        <th>Email</th>\r\n                        <th>User Id</th>\r\n                        <th>Amount</th>\r\n                        <th>Date</th>\r\n                        <th>Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {orders && orders.map((order) => {\r\n                        return <tr>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.email}</td>\r\n                            <td>{order.userid}</td>\r\n                            <td>{order.orderAmount}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                    <h1>Delivered</h1>\r\n                                ) : (\r\n                                    <button className=\"btn\" onClick={() => { dispatch(deliverOrder(order._id)) }}>Deliver</button>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <i className=\"fa fa-trash m-1\"  onClick={() => { dispatch(deleteOrder(order._id))}}></i>\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\RegisterScreen.js",["123","124","125"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../actions/userActions'\r\nimport Success from '../components/Success';\r\nimport Error from '../components/Error';\r\nimport Loading from '../components/Loading'\r\n\r\nexport default function Registerscreen() {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cpassword, setCPassword] = useState('')\r\n    const registerstate = useSelector(state => state.registerUserReducer)\r\n    const { error, loading, success } = registerstate\r\n    const dispatch = useDispatch()\r\n    function register() {\r\n        if (password != cpassword) {\r\n            alert('Password not matched')\r\n        }\r\n        else {\r\n            const user = {\r\n                name,\r\n                email,\r\n                password\r\n            }\r\n            console.log(user);\r\n            dispatch(registerUser(user))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center mt-5\">\r\n                <div className=\"col-md-5 mt-5 text-start shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                    {loading && (<Loading />)}\r\n                    {success && (<Success success='User Register Successfully'/>)}\r\n                    {error && (<Error error='Email already registered' />)}\r\n\r\n                    <h3 style={{ fontSize: \"30px\" }} className=\"m-2\" className=\"\">Register</h3>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"name\"\r\n                            className=\"form-control\"\r\n                            value={name}\r\n                            onChange={(e) => { setName(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => { setEmail(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => { setPassword(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"confirm password\"\r\n                            className=\"form-control\"\r\n                            value={cpassword}\r\n                            onChange={(e) => { setCPassword(e.target.value) }}\r\n                        />\r\n                        <button className=\"btn mt-3  mb-3\" onClick={register}>Register</button>\r\n                        <br />\r\n                        <a style={{ color: 'black' }} href=\"/login\">Click Here To Login</a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\components\\Success.js",[],"D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\screens\\EditPizza.js",["126","127","128"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editPizza, getPizzaById } from '../actions/pizzaActions';\r\nimport Loading from '../components/Loading';\r\nimport Error from '../components/Error';\r\nimport Success from '../components/Success';\r\n\r\nexport default function EditPizza({ match }) {\r\n    const dispatch = useDispatch()\r\n    const [name, setname] = useState(\"\")\r\n    const [smallprice, setsmallprice] = useState()\r\n    const [mediumprice, setmediumprice] = useState()\r\n    const [largeprice, setlargeprice] = useState()\r\n    const [image, setimage] = useState('')\r\n    const [description, setdescription] = useState(\"\")\r\n    const [category, setcategory] = useState(\"\")\r\n\r\n    const getpizzabyidstate = useSelector(state => state.getPizzaByIdReducer)\r\n\r\n    const { pizza, error, loading } = getpizzabyidstate\r\n\r\n    const editpizzastate = useSelector(state => state.editPizzaReducer)\r\n    const { editsuccess, editerror, editloading } = editpizzastate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (pizza) {\r\n            if (pizza._id == match.params.pizzaid) {\r\n                setname(pizza.name)\r\n                setdescription(pizza.description)\r\n                setcategory(pizza.category)\r\n                setsmallprice(pizza.prices[0]['small'])\r\n                setmediumprice(pizza.prices[0]['medium'])\r\n                setlargeprice(pizza.prices[0]['large'])\r\n                setimage(pizza.image)\r\n            }\r\n            else {\r\n                dispatch(getPizzaById(match.params.pizzaid))\r\n            }\r\n        }\r\n        else {\r\n            dispatch(getPizzaById(match.params.pizzaid))\r\n        }\r\n    }, [pizza, dispatch])\r\n\r\n    function formHandler(e) {\r\n        e.preventDefault()\r\n        const editedpizza = {\r\n            _id: match.params.pizzaid,\r\n            name,\r\n            image,\r\n            description,\r\n            category,\r\n            prices: {\r\n                small: smallprice,\r\n                medium: mediumprice,\r\n                large: largeprice\r\n            }\r\n        }\r\n        dispatch(editPizza(editedpizza))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-start shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <h2 style={{fontSize: '22px'}}>Edit Pizza</h2>\r\n                {loading && (<Loading />)}\r\n                {error && (<Error error='Something went wrong' />)}\r\n                {editsuccess && (<Success success='Pizza detail edited successfully' />)}\r\n                {editloading && (<Loading />)}\r\n\r\n                <form onSubmit={formHandler}>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            setname(e.target.value);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"small varient price\"\r\n                        value={smallprice}\r\n                        onChange={(e) => {\r\n                            setsmallprice(e.target.value);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"medium varient price\"\r\n                        value={mediumprice}\r\n                        onChange={(e) => {\r\n                            setmediumprice(e.target.value);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"large varient price\"\r\n                        value={largeprice}\r\n                        onChange={(e) => {\r\n                            setlargeprice(e.target.value);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"category\"\r\n                        value={category}\r\n                        onChange={(e) => { setcategory(e.target.value); }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"description\"\r\n                        value={description}\r\n                        onChange={(e) => {\r\n                            setdescription(e.target.value);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type='text'\r\n                        placeholder=\"image\"\r\n                        value={image}\r\n                        onChange={(e) => {\r\n                            setimage(e.target.value);\r\n                        }}\r\n                    />\r\n                    <button className=\"btn mt-3\" type=\"submit\">Edit Pizza</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\actions\\orderActions.js",["129"],"import axios from 'axios';\r\n\r\n\r\nexport const getAllOrders=()=>async (dispatch , getState)=>{\r\n\r\n    const currentUser = getState().loginUserReducer.currentUser\r\n    dispatch({type: 'GET_ALLORDERS_REQUEST'})\r\n \r\n    try{\r\n\r\n        const response =await axios.get('/api/orders/getallorders') \r\n        console.log(response)\r\n        dispatch({type: 'GET_ALLORDERS_SUCCESS', payload: response.data})\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({type: 'GET_ALLORDERS_FAILED', payload: error})\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deliverOrder=(orderid)=>async dispatch=>{\r\n\r\n    try {\r\n        const response = await axios.post('/api/orders/deliverorder' , {orderid})\r\n        console.log(response);\r\n        alert('Order Delivered')\r\n        const orders = await axios.get('/api/orders/getallorders')\r\n        dispatch({type: 'GET_ALLORDERS_SUCCESS' , payload:orders.data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteOrder=(orderid)=>async dispatch=>{\r\n\r\n\r\n    try {\r\n        const response= await axios.post('/api/orders/deleteorder', {orderid})\r\n        alert('Order Deleted Successfully')\r\n        console.log(response)\r\n        window.location.reload()\r\n    } catch (error) {\r\n        alert(\"Something wen wrong\")\r\n        console.log(error)\r\n    }\r\n\r\n}","D:\\Pizza-Valley\\Admin-Panel\\dashboard\\src\\reducers\\orderReducer.js",["130"],"import axios from 'axios';\r\n\r\nexport const getAllOrdersReducer = (state = {orders : []}, action) => {\r\n\r\n    switch (action.type) \r\n    {\r\n        case 'GET_ALLORDERS_REQUEST': return{\r\n            loading : true,\r\n            ...state\r\n        }  \r\n        case 'GET_ALLORDERS_SUCCESS': return{\r\n            loading : false,\r\n            orders: action.payload\r\n        }  \r\n        case 'GET_ALLORDERS_FAILED': return{\r\n            error: action.payload,\r\n            loading : false\r\n\r\n        }  \r\n        default: return state\r\n    }\r\n\r\n}",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":32,"nodeType":"137","messageId":"138","endLine":4,"endColumn":36},{"ruleId":"135","severity":1,"message":"139","line":4,"column":38,"nodeType":"137","messageId":"138","endLine":4,"endColumn":44},{"ruleId":"140","severity":1,"message":"141","line":33,"column":60,"nodeType":"142","endLine":33,"endColumn":72},{"ruleId":"143","severity":1,"message":"144","line":20,"column":17,"nodeType":"145","endLine":20,"endColumn":159},{"ruleId":"143","severity":1,"message":"146","line":25,"column":19,"nodeType":"145","endLine":25,"endColumn":96},{"ruleId":"135","severity":1,"message":"147","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"148","line":12,"column":13,"nodeType":"137","messageId":"138","endLine":12,"endColumn":24},{"ruleId":"135","severity":1,"message":"149","line":13,"column":11,"nodeType":"137","messageId":"138","endLine":13,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":6,"column":123,"nodeType":"152","messageId":"153","endLine":6,"endColumn":132},{"ruleId":"135","severity":1,"message":"154","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":17,"column":8,"nodeType":"157","endLine":17,"endColumn":10,"suggestions":"158"},{"ruleId":"135","severity":1,"message":"154","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":14,"column":8,"nodeType":"157","endLine":14,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":49,"column":22,"nodeType":"162","messageId":"153","endLine":49,"endColumn":24},{"ruleId":"160","severity":1,"message":"163","line":50,"column":89,"nodeType":"162","messageId":"153","endLine":50,"endColumn":91},{"ruleId":"135","severity":1,"message":"154","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":15,"column":8,"nodeType":"157","endLine":15,"endColumn":10,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"147","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":18,"column":22,"nodeType":"162","messageId":"153","endLine":18,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":41,"column":70,"nodeType":"142","endLine":41,"endColumn":82},{"ruleId":"135","severity":1,"message":"165","line":23,"column":26,"nodeType":"137","messageId":"138","endLine":23,"endColumn":35},{"ruleId":"160","severity":1,"message":"163","line":29,"column":27,"nodeType":"162","messageId":"153","endLine":29,"endColumn":29},{"ruleId":"155","severity":1,"message":"166","line":45,"column":8,"nodeType":"157","endLine":45,"endColumn":25,"suggestions":"167"},{"ruleId":"135","severity":1,"message":"148","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"135","severity":1,"message":"168","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Expected '===' and instead saw '=='.",["173"],"'editerror' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.pizzaid'. Either include it or remove the dependency array.",["174"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"175","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [dispatch]",{"range":"181","text":"182"},{"range":"183","text":"182"},{"range":"184","text":"182"},"Update the dependencies array to be: [pizza, dispatch, match.params.pizzaid]",{"range":"185","text":"186"},[630,632],"[dispatch]",[528,530],[604,606],[1696,1713],"[pizza, dispatch, match.params.pizzaid]"]