{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzasReducer, addPizzaReducer } from '../reducers/pizzaReducers';\nimport { loginUserReducer, registerUserReducer } from '../reducers/userReducer';\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer\n}); // const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst initialState = {\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/Pizza-Valley/Admin-Panel/dashboard/src/store/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","addPizzaReducer","loginUserReducer","registerUserReducer","finalReducer","getPizzaByIdReducer","currentUser","localStorage","getItem","JSON","parse","initialState","composeEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,mBAAT,EAA+BC,eAA/B,QAAsD,2BAAtD;AACA,SAASC,gBAAT,EAA4BC,mBAA5B,QAAuD,yBAAvD;AAGA,MAAMC,YAAY,GAAGT,eAAe,CAAC;AACjCK,EAAAA,mBAAmB,EAAEA,mBADY;AAEjCG,EAAAA,mBAAmB,EAAEA,mBAFY;AAGjCD,EAAAA,gBAAgB,EAAEA,gBAHe;AAIjCD,EAAAA,eAAe,EAAEA,eAJgB;AAKjCI,EAAAA,mBAAmB,EAAEA;AALY,CAAD,CAApC,C,CAQA;;AACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAwF,IAA5G;AAGA,MAAMG,YAAY,GAAG;AAEjBT,EAAAA,gBAAgB,EAAE;AACdI,IAAAA,WAAW,EAAEA;AADC;AAFD,CAArB;AAQA,MAAMM,gBAAgB,GAAGb,mBAAmB,CAAC,EAAD,CAA5C;AAEA,MAAMc,KAAK,GAAGjB,WAAW,CAACQ,YAAD,EAAeO,YAAf,EAA6BC,gBAAgB,CAACf,eAAe,CAACC,KAAD,CAAhB,CAA7C,CAAzB;AAEA,eAAee,KAAf","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { getAllPizzasReducer , addPizzaReducer } from '../reducers/pizzaReducers';\r\nimport { loginUserReducer , registerUserReducer } from '../reducers/userReducer';\r\n\r\n\r\nconst finalReducer = combineReducers({\r\n    getAllPizzasReducer: getAllPizzasReducer,\r\n    registerUserReducer: registerUserReducer,\r\n    loginUserReducer: loginUserReducer,\r\n    addPizzaReducer: addPizzaReducer,\r\n    getPizzaByIdReducer: getPizzaByIdReducer\r\n})\r\n\r\n// const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\r\n\r\n\r\nconst initialState = {\r\n\r\n    loginUserReducer: {\r\n        currentUser: currentUser\r\n    }\r\n\r\n}\r\n\r\nconst composeEnhancers = composeWithDevTools({})\r\n\r\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}