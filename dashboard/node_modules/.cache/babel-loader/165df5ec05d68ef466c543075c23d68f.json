{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pizza-Valley\\\\Admin-Panel\\\\dashboard\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../actions/userActions';\nimport Success from '../components/Success';\nimport Error from '../components/Error';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registerscreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setCPassword] = useState('');\n  const registerstate = useSelector(state => state.registerUserReducer);\n  const {\n    error,\n    loading,\n    success\n  } = registerstate;\n  const dispatch = useDispatch();\n\n  function register() {\n    if (password != cpassword) {\n      alert('Password not matched');\n    } else {\n      const user = {\n        name,\n        email,\n        password\n      };\n      console.log(user);\n      dispatch(registerUser(user));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 mt-5 text-start shadow-lg p-3 mb-5 bg-white rounded\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this), success && /*#__PURE__*/_jsxDEV(Success, {\n          success: \"User Register Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 34\n        }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n          error: \"Email already registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          className: \"m-2\",\n          className: \"\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            placeholder: \"name\",\n            className: \"form-control\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            placeholder: \"email\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"password\",\n            placeholder: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"password\",\n            placeholder: \"confirm password\",\n            className: \"form-control\",\n            value: cpassword,\n            onChange: e => {\n              setCPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn mt-3  mb-3\",\n            onClick: register,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: 'black'\n            },\n            href: \"/login\",\n            children: \"Click Here To Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registerscreen, \"E0hFO5RAlDGGqKq3LRuK+UlKaS0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Registerscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerscreen\");","map":{"version":3,"sources":["D:/Pizza-Valley/Admin-Panel/dashboard/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","registerUser","Success","Error","Loading","Registerscreen","name","setName","email","setEmail","password","setPassword","cpassword","setCPassword","registerstate","state","registerUserReducer","error","loading","success","dispatch","register","alert","user","console","log","fontSize","e","target","value","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../actions/userActions'\r\nimport Success from '../components/Success';\r\nimport Error from '../components/Error';\r\nimport Loading from '../components/Loading'\r\n\r\nexport default function Registerscreen() {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cpassword, setCPassword] = useState('')\r\n    const registerstate = useSelector(state => state.registerUserReducer)\r\n    const { error, loading, success } = registerstate\r\n    const dispatch = useDispatch()\r\n    function register() {\r\n        if (password != cpassword) {\r\n            alert('Password not matched')\r\n        }\r\n        else {\r\n            const user = {\r\n                name,\r\n                email,\r\n                password\r\n            }\r\n            console.log(user);\r\n            dispatch(registerUser(user))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center mt-5\">\r\n                <div className=\"col-md-5 mt-5 text-start shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                    {loading && (<Loading />)}\r\n                    {success && (<Success success='User Register Successfully'/>)}\r\n                    {error && (<Error error='Email already registered' />)}\r\n\r\n                    <h3 style={{ fontSize: \"30px\" }} className=\"m-2\" className=\"\">Register</h3>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"name\"\r\n                            className=\"form-control\"\r\n                            value={name}\r\n                            onChange={(e) => { setName(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => { setEmail(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => { setPassword(e.target.value) }}\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"confirm password\"\r\n                            className=\"form-control\"\r\n                            value={cpassword}\r\n                            onChange={(e) => { setCPassword(e.target.value) }}\r\n                        />\r\n                        <button className=\"btn mt-3  mb-3\" onClick={register}>Register</button>\r\n                        <br />\r\n                        <a style={{ color: 'black' }} href=\"/login\">Click Here To Login</a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}