{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pizza-Valley\\\\Admin-Panel\\\\dashboard\\\\src\\\\screens\\\\OrdersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error'; // import Filter from '../components/Filter';\n\nimport { getAllOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrdersList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const getordersstate = useSelector(state => state.getAllOrdersReducer);\n  const {\n    loading,\n    error,\n    orders\n  } = getordersstate;\n  useEffect(() => {\n    dispatch(getAllOrders());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders && orders.map(order => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.userid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.orderAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: deliver(order._id),\n                children: \"Deliver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrdersList, \"2GlDStK7iT9LeA4Z3Cok4XoPwkA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = OrdersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"sources":["D:/Pizza-Valley/Admin-Panel/dashboard/src/screens/OrdersList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Loading","Error","getAllOrders","OrdersList","dispatch","getordersstate","state","getAllOrdersReducer","loading","error","orders","map","order","_id","email","userid","orderAmount","createdAt","substring","isDelivered","deliver"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,cAAc,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,mBAAhB,CAAlC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA6BL,cAAnC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,eACKM,OAAO,iBAAK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADjB,EAEKC,KAAK,iBAAK,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFf,eAGI;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA,kBACKC,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AAC7B,8BAAO;AAAA,oCACH;AAAA,wBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADG,eAEH;AAAA,wBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFG,eAGH;AAAA,wBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHG,eAIH;AAAA,wBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,oBAJG,eAKH;AAAA,wBAAKJ,KAAK,CAACK,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,oBALG,eAMH;AAAA,wBACKN,KAAK,CAACO,WAAN,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,gBAGG;AAAQ,gBAAA,SAAS,EAAC,KAAlB;AAAwB,gBAAA,OAAO,EAAEC,OAAO,CAACR,KAAK,CAACC,GAAP,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,oBANG;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAcH,SAfU;AADf;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GA9CuBV,U;UACHL,W,EACMC,W;;;KAFHI,U","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Error from '../components/Error';\r\n// import Filter from '../components/Filter';\r\nimport { getAllOrders } from '../actions/orderActions';\r\n\r\nexport default function OrdersList() {\r\n    const dispatch = useDispatch()\r\n    const getordersstate = useSelector(state => state.getAllOrdersReducer)\r\n    const { loading, error, orders } = getordersstate\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllOrders())\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {loading && (<Loading />)}\r\n            {error && (<Error error='Something went wrong' />)}\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th>Order Id</th>\r\n                        <th>Email</th>\r\n                        <th>User Id</th>\r\n                        <th>Amount</th>\r\n                        <th>Date</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {orders && orders.map((order) => {\r\n                        return <tr>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.email}</td>\r\n                            <td>{order.userid}</td>\r\n                            <td>{order.orderAmount}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                    <h1>Delivered</h1>\r\n                                ) : (\r\n                                    <button className=\"btn\" onClick={deliver(order._id)}>Deliver</button>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}